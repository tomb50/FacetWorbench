package FacetWorkbench.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptC1 = createDescriptorForC1();
  /*package*/ final ConceptDescriptor myConceptC2 = createDescriptorForC2();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptC1, myConceptC2);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.C1:
        return myConceptC1;
      case LanguageConceptSwitch.C2:
        return myConceptC2;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForC1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FacetWorkbench", "C1", 0x193fa0117081403cL, 0xa008f7a04825fc6fL, 0x1aabcdd428f59728L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:772aa354-4a16-4ea5-9873-5fb50824388d(FacetWorkbench.structure)/1921855977107593000");
    b.version(2);
    b.associate("myC2", 0x1aabcdd428f5972eL).target(0x193fa0117081403cL, 0xa008f7a04825fc6fL, 0x1aabcdd428f5972bL).optional(true).origin("1921855977107593006").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForC2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FacetWorkbench", "C2", 0x193fa0117081403cL, 0xa008f7a04825fc6fL, 0x1aabcdd428f5972bL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:772aa354-4a16-4ea5-9873-5fb50824388d(FacetWorkbench.structure)/1921855977107593003");
    b.version(2);
    return b.create();
  }
}
